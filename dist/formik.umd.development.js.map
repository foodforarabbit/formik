{"version":3,"file":"formik.umd.development.js","sources":["../src/utils.ts","../src/FormikContext.tsx","../src/Formik.tsx","../src/Field.tsx","../src/Form.tsx","../src/withFormik.tsx","../src/connect.tsx","../src/FieldArray.tsx","../src/ErrorMessage.tsx"],"sourcesContent":["import clone from 'lodash/clone';\nimport toPath from 'lodash/toPath';\nimport * as React from 'react';\n\n// Assertions\n\n/** @private is the given object a Function? */\nexport const isFunction = (obj: any): obj is Function =>\n  typeof obj === 'function';\n\n/** @private is the given object an Object? */\nexport const isObject = (obj: any): boolean =>\n  obj !== null && typeof obj === 'object';\n\n/** @private is the given object an integer? */\nexport const isInteger = (obj: any): boolean =>\n  String(Math.floor(Number(obj))) === obj;\n\n/** @private is the given object a string? */\nexport const isString = (obj: any): obj is string =>\n  Object.prototype.toString.call(obj) === '[object String]';\n\n/** @private is the given object a NaN? */\n// eslint-disable-next-line no-self-compare\nexport const isNaN = (obj: any): boolean => obj !== obj;\n\n/** @private Does a React component have exactly 0 children? */\nexport const isEmptyChildren = (children: any): boolean =>\n  React.Children.count(children) === 0;\n\n/** @private is the given object/value a promise? */\nexport const isPromise = (value: any): value is PromiseLike<any> =>\n  isObject(value) && isFunction(value.then);\n\n/** @private is the given object/value a type of synthetic event? */\nexport const isInputEvent = (value: any): value is React.SyntheticEvent<any> =>\n  value && isObject(value) && isObject(value.target);\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?Document} doc Defaults to current document.\n * @return {Element | null}\n * @see https://github.com/facebook/fbjs/blob/master/packages/fbjs/src/core/dom/getActiveElement.js\n */\nexport function getActiveElement(doc?: Document): Element | null {\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\n/**\n * Deeply get a value from an object via its path.\n */\nexport function getIn(\n  obj: any,\n  key: string | string[],\n  def?: any,\n  p: number = 0\n) {\n  const path = toPath(key);\n  while (obj && p < path.length) {\n    obj = obj[path[p++]];\n  }\n  return obj === undefined ? def : obj;\n}\n\n/**\n * Deeply set a value from in object via it's path. If the value at `path`\n * has changed, return a shallow copy of obj with `value` set at `path`.\n * If `value` has not changed, return the original `obj`.\n *\n * Existing objects / arrays along `path` are also shallow copied. Sibling\n * objects along path retain the same internal js reference. Since new\n * objects / arrays are only created along `path`, we can test if anything\n * changed in a nested structure by comparing the object's reference in\n * the old and new object, similar to how russian doll cache invalidation\n * works.\n *\n * In earlier versions of this function, which used cloneDeep, there were\n * issues whereby settings a nested value would mutate the parent\n * instead of creating a new object. `clone` avoids that bug making a\n * shallow copy of the objects along the update path\n * so no object is mutated in place.\n *\n * Before changing this function, please read through the following\n * discussions.\n *\n * @see https://github.com/developit/linkstate\n * @see https://github.com/jaredpalmer/formik/pull/123\n */\nexport function setIn(obj: any, path: string, value: any): any {\n  let res: any = clone(obj); // this keeps inheritance when obj is a class\n  let resVal: any = res;\n  let i = 0;\n  let pathArray = toPath(path);\n\n  for (; i < pathArray.length - 1; i++) {\n    const currentPath: string = pathArray[i];\n    let currentObj: any = getIn(obj, pathArray.slice(0, i + 1));\n\n    if (currentObj) {\n      resVal = resVal[currentPath] = clone(currentObj);\n    } else {\n      const nextPath: string = pathArray[i + 1];\n      resVal = resVal[currentPath] =\n        isInteger(nextPath) && Number(nextPath) >= 0 ? [] : {};\n    }\n  }\n\n  // Return original object if new value is the same as current\n  if ((i === 0 ? obj : resVal)[pathArray[i]] === value) {\n    return obj;\n  }\n\n  if (value === undefined) {\n    delete resVal[pathArray[i]];\n  } else {\n    resVal[pathArray[i]] = value;\n  }\n\n  // If the path array has a single element, the loop did not run.\n  // Deleting on `resVal` had no effect in this scenario, so we delete on the result instead.\n  if (i === 0 && value === undefined) {\n    delete res[pathArray[i]];\n  }\n\n  return res;\n}\n\n/**\n * Recursively a set the same value for all keys and arrays nested object, cloning\n * @param object\n * @param value\n * @param visited\n * @param response\n */\nexport function setNestedObjectValues<T>(\n  object: any,\n  value: any,\n  visited: any = new WeakMap(),\n  response: any = {}\n): T {\n  for (let k of Object.keys(object)) {\n    const val = object[k];\n    if (isObject(val)) {\n      if (!visited.get(val)) {\n        visited.set(val, true);\n        // In order to keep array values consistent for both dot path  and\n        // bracket syntax, we need to check if this is an array so that\n        // this will output  { friends: [true] } and not { friends: { \"0\": true } }\n        response[k] = Array.isArray(val) ? [] : {};\n        setNestedObjectValues(val, value, visited, response[k]);\n      }\n    } else {\n      response[k] = value;\n    }\n  }\n\n  return response;\n}\n","import * as React from 'react';\nimport { FormikContext } from './types';\n\nconst PrivateFormikContext = React.createContext<FormikContext<any>>({} as any);\nexport const FormikProvider = PrivateFormikContext.Provider;\nexport const FormikConsumer = PrivateFormikContext.Consumer;\n\nexport function useFormikContext<Values>() {\n  return React.useContext<FormikContext<Values>>(PrivateFormikContext);\n}\n","import * as React from 'react';\nimport isEqual from 'react-fast-compare';\nimport deepmerge from 'deepmerge';\nimport {\n  FormikConfig,\n  FormikErrors,\n  FormikState,\n  FormikTouched,\n  FormikValues,\n  FormikProps,\n  FieldMetaProps,\n  FieldInputProps,\n} from './types';\nimport {\n  isFunction,\n  isString,\n  setIn,\n  isEmptyChildren,\n  isPromise,\n  setNestedObjectValues,\n  getActiveElement,\n  getIn,\n} from './utils';\nimport { FormikProvider } from './FormikContext';\nimport invariant from 'tiny-warning';\nimport { LowPriority, unstable_runWithPriority } from 'scheduler';\n\n// We already used FormikActions. So we'll go all Elm-y, and use Message.\ntype FormikMessage<Values> =\n  | { type: 'SUBMIT_ATTEMPT' }\n  | { type: 'SUBMIT_FAILURE' }\n  | { type: 'SUBMIT_SUCCESS' }\n  | { type: 'SET_ISVALIDATING'; payload: boolean }\n  | { type: 'SET_ISSUBMITTING'; payload: boolean }\n  | { type: 'SET_VALUES'; payload: Values }\n  | { type: 'SET_FIELD_VALUE'; payload: { field: string; value?: any } }\n  | { type: 'SET_FIELD_TOUCHED'; payload: { field: string; value?: boolean } }\n  | { type: 'SET_FIELD_ERROR'; payload: { field: string; value?: string } }\n  | { type: 'SET_TOUCHED'; payload: FormikTouched<Values> }\n  | { type: 'SET_ERRORS'; payload: FormikErrors<Values> }\n  | { type: 'SET_STATUS'; payload: any }\n  | { type: 'SET_FORMIK_STATE'; payload: FormikState<Values> }\n  | { type: 'RESET_FORM'; payload: FormikState<Values> };\n\n// State reducer\nfunction formikReducer<Values>(\n  state: FormikState<Values>,\n  msg: FormikMessage<Values>\n) {\n  switch (msg.type) {\n    case 'SET_VALUES':\n      return { ...state, values: msg.payload };\n    case 'SET_TOUCHED':\n      return { ...state, touched: msg.payload };\n    case 'SET_ERRORS':\n      return { ...state, errors: msg.payload };\n    case 'SET_STATUS':\n      return { ...state, status: msg.payload };\n    case 'SET_ISSUBMITTING':\n      return { ...state, isSubmitting: msg.payload };\n    case 'SET_ISVALIDATING':\n      return { ...state, isValidating: msg.payload };\n    case 'SET_FIELD_VALUE':\n      return {\n        ...state,\n        values: setIn(state.values, msg.payload.field, msg.payload.value),\n      };\n    case 'SET_FIELD_TOUCHED':\n      return {\n        ...state,\n        touched: setIn(state.touched, msg.payload.field, msg.payload.value),\n      };\n    case 'SET_FIELD_ERROR':\n      return {\n        ...state,\n        errors: setIn(state.errors, msg.payload.field, msg.payload.value),\n      };\n    case 'RESET_FORM':\n    case 'SET_FORMIK_STATE':\n      return { ...state, ...msg.payload };\n    case 'SUBMIT_ATTEMPT':\n      return {\n        ...state,\n        touched: setNestedObjectValues<FormikTouched<Values>>(\n          state.values,\n          true\n        ),\n        isSubmitting: true,\n        submitCount: state.submitCount + 1,\n      };\n    case 'SUBMIT_FAILURE':\n      return {\n        ...state,\n        isSubmitting: false,\n      };\n    case 'SUBMIT_SUCCESS':\n      return {\n        ...state,\n        isSubmitting: false,\n      };\n    default:\n      return state;\n  }\n}\n\n// Initial empty states // objects\nconst emptyErrors: FormikErrors<any> = {};\nconst emptyTouched: FormikTouched<any> = {};\n\n// This is an object that contains a map of all registered fields\n// and their validate functions\ninterface FieldRegistry {\n  [field: string]: {\n    validate: (value: any) => string | Promise<string> | undefined;\n  };\n}\nconst emptyFieldRegistry: FieldRegistry = {};\n\nfunction useFormikInternal<Values = object>({\n  validateOnChange = true,\n  validateOnBlur = true,\n  isInitialValid,\n  enableReinitialize = false,\n  onSubmit,\n  ...rest\n}: FormikConfig<Values>) {\n  const props = { validateOnChange, validateOnBlur, onSubmit, ...rest };\n  const initialValues = React.useRef(props.initialValues);\n  const initialErrors = React.useRef(props.initialErrors || emptyErrors);\n  const initialTouched = React.useRef(props.initialTouched || emptyTouched);\n  const initialStatus = React.useRef(props.initialStatus);\n  const isMounted = React.useRef<boolean>(false);\n  const fieldRegistry = React.useRef<FieldRegistry>(emptyFieldRegistry);\n  React.useEffect(() => {\n    if (process.env.NODE_ENV !== 'production') {\n      invariant(\n        typeof isInitialValid === 'undefined',\n        'isInitialValid has been deprecated and will be removed in future versions of Formik. Please use initialErrors instead.'\n      );\n    }\n  }, [isInitialValid]);\n\n  React.useEffect(() => {\n    isMounted.current = true;\n\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  const [state, dispatch] = React.useReducer<\n    React.Reducer<FormikState<Values>, FormikMessage<Values>>\n  >(formikReducer, {\n    values: props.initialValues,\n    errors: props.initialErrors || {},\n    touched: props.initialTouched || {},\n    status: props.initialStatus,\n    isSubmitting: false,\n    isValidating: false,\n    submitCount: 0,\n  });\n\n  const runValidateHandler = React.useCallback(\n    (values: Values, field?: string): Promise<FormikErrors<Values>> => {\n      return new Promise(resolve => {\n        const maybePromisedErrors = (props.validate as any)(values, field);\n        if (maybePromisedErrors === undefined) {\n          resolve(emptyErrors);\n        } else if (isPromise(maybePromisedErrors)) {\n          (maybePromisedErrors as Promise<any>).then(\n            () => {\n              resolve(emptyErrors);\n            },\n            errors => {\n              resolve(errors);\n            }\n          );\n        } else {\n          resolve(maybePromisedErrors);\n        }\n      });\n    },\n    [props.validate]\n  );\n\n  /**\n   * Run validation against a Yup schema and optionally run a function if successful\n   */\n  const runValidationSchema = React.useCallback(\n    (values: Values, field?: string) => {\n      return new Promise(resolve => {\n        const validationSchema = props.validationSchema;\n        const schema = isFunction(validationSchema)\n          ? validationSchema(field)\n          : validationSchema;\n        let promise =\n          field && schema.validateAt\n            ? schema.validateAt(field, values)\n            : validateYupSchema(values, schema);\n        promise.then(\n          () => {\n            resolve(emptyErrors);\n          },\n          (err: any) => {\n            resolve(yupToFormErrors(err));\n          }\n        );\n      });\n    },\n    [props.validationSchema]\n  );\n\n  const runSingleFieldLevelValidation = React.useCallback(\n    (field: string, value: void | string): Promise<string> => {\n      return new Promise(resolve =>\n        resolve(fieldRegistry.current[field].validate(value))\n      );\n    },\n    []\n  );\n\n  const runFieldLevelValidations = React.useCallback(\n    (values: Values): Promise<FormikErrors<Values>> => {\n      const fieldKeysWithValidation: string[] = Object.keys(\n        fieldRegistry.current\n      ).filter(f => isFunction(fieldRegistry.current[f].validate));\n\n      // Construct an array with all of the field validation functions\n      const fieldValidations: Promise<string>[] =\n        fieldKeysWithValidation.length > 0\n          ? fieldKeysWithValidation.map(f =>\n              runSingleFieldLevelValidation(f, getIn(values, f))\n            )\n          : [Promise.resolve('DO_NOT_DELETE_YOU_WILL_BE_FIRED')]; // use special case ;)\n\n      return Promise.all(fieldValidations).then((fieldErrorsList: string[]) =>\n        fieldErrorsList.reduce((prev, curr, index) => {\n          if (curr === 'DO_NOT_DELETE_YOU_WILL_BE_FIRED') {\n            return prev;\n          }\n          if (curr) {\n            prev = setIn(prev, fieldKeysWithValidation[index], curr);\n          }\n          return prev;\n        }, {})\n      );\n    },\n    [runSingleFieldLevelValidation]\n  );\n\n  // Run all validations and return the result\n  const runAllValidations = React.useCallback(\n    (values: Values) => {\n      return Promise.all([\n        runFieldLevelValidations(values),\n        props.validationSchema ? runValidationSchema(values) : {},\n        props.validate ? runValidateHandler(values) : {},\n      ]).then(([fieldErrors, schemaErrors, validateErrors]) => {\n        const combinedErrors = deepmerge.all<FormikErrors<Values>>(\n          [fieldErrors, schemaErrors, validateErrors],\n          { arrayMerge }\n        );\n        return combinedErrors;\n      });\n    },\n    [\n      props.validate,\n      props.validationSchema,\n      runFieldLevelValidations,\n      runValidateHandler,\n      runValidationSchema,\n    ]\n  );\n\n  // Run validations and dispatching the result as low-priority via rAF.\n  //\n  // The thinking is that validation as a result of onChange and onBlur\n  // should never block user input. Note: This method should never be called\n  // during the submission phase because validation prior to submission\n  // is actaully high-priority since we absolutely need to guarantee the\n  // form is valid before executing props.onSubmit.\n  const validateFormWithLowPriority = useEventCallback(\n    (values: Values = state.values) => {\n      return unstable_runWithPriority(LowPriority, () => {\n        return runAllValidations(values).then(combinedErrors => {\n          if (!!isMounted.current) {\n            dispatch({ type: 'SET_ERRORS', payload: combinedErrors });\n          }\n          return combinedErrors;\n        });\n      });\n    },\n    [runAllValidations, state.values]\n  );\n\n  // Run all validations methods and update state accordingly\n  const validateFormWithHighPriority = useEventCallback(\n    (values: Values = state.values) => {\n      dispatch({ type: 'SET_ISVALIDATING', payload: true });\n      return runAllValidations(values).then(combinedErrors => {\n        if (!!isMounted.current) {\n          dispatch({ type: 'SET_ISVALIDATING', payload: false });\n          if (!isEqual(state.errors, combinedErrors)) {\n            dispatch({ type: 'SET_ERRORS', payload: combinedErrors });\n          }\n        }\n        return combinedErrors;\n      });\n    },\n    [state.values, state.errors, runAllValidations]\n  );\n\n  const resetForm = React.useCallback(\n    (nextState?: FormikState<Values>) => {\n      const values =\n        nextState && nextState.values\n          ? nextState.values\n          : initialValues.current;\n      const errors =\n        nextState && nextState.errors\n          ? nextState.errors\n          : initialErrors.current\n          ? initialErrors.current\n          : props.initialErrors || {};\n      const touched =\n        nextState && nextState.touched\n          ? nextState.touched\n          : initialTouched.current\n          ? initialTouched.current\n          : props.initialTouched || {};\n      const status =\n        nextState && nextState.status\n          ? nextState.status\n          : initialStatus.current\n          ? initialStatus.current\n          : props.initialStatus;\n      initialValues.current = values;\n      initialErrors.current = errors;\n      initialTouched.current = touched;\n      initialStatus.current = status;\n\n      dispatch({\n        type: 'RESET_FORM',\n        payload: {\n          isSubmitting: !!nextState && !!nextState.isSubmitting,\n          errors,\n          touched,\n          status,\n          values,\n          isValidating: !!nextState && !!nextState.isValidating,\n          submitCount:\n            !!nextState &&\n            !!nextState.submitCount &&\n            typeof nextState.submitCount === 'number'\n              ? nextState.submitCount\n              : 0,\n        },\n      });\n    },\n    [\n      props.initialErrors,\n      props.initialStatus,\n      props.initialTouched,\n      props.initialValues,\n    ]\n  );\n\n  React.useEffect(() => {\n    if (\n      enableReinitialize &&\n      isMounted.current === true &&\n      !isEqual(initialValues.current, props.initialValues)\n    ) {\n      initialValues.current = props.initialValues;\n      resetForm();\n    }\n  }, [enableReinitialize, props.initialValues, resetForm]);\n\n  const validateField = useEventCallback(\n    (name: string) => {\n      // This will efficiently validate a single field by avoiding state\n      // changes if the validation function is synchronous. It's different from\n      // what is called when using validateForm.\n\n      if (isFunction(fieldRegistry.current[name].validate)) {\n        const value = getIn(state.values, name);\n        const maybePromise = fieldRegistry.current[name].validate(value);\n        if (isPromise(maybePromise)) {\n          // Only flip isValidating if the function is async.\n          dispatch({ type: 'SET_ISVALIDATING', payload: true });\n          return maybePromise\n            .then((x: any) => x, (e: any) => e)\n            .then((error: string) => {\n              dispatch({\n                type: 'SET_FIELD_ERROR',\n                payload: { field: name, value: error },\n              });\n              dispatch({ type: 'SET_ISVALIDATING', payload: false });\n            });\n        } else {\n          dispatch({\n            type: 'SET_FIELD_ERROR',\n            payload: {\n              field: name,\n              value: maybePromise as string | undefined,\n            },\n          });\n          return Promise.resolve(maybePromise as string | undefined);\n        }\n      } else {\n        return Promise.resolve();\n      }\n    },\n    [state.values]\n  );\n\n  const registerField = React.useCallback((name: string, { validate }: any) => {\n    fieldRegistry.current[name] = {\n      validate,\n    };\n  }, []);\n\n  const unregisterField = React.useCallback((name: string) => {\n    delete fieldRegistry.current[name];\n  }, []);\n\n  const setTouched = useEventCallback(\n    (touched: FormikTouched<Values>) => {\n      dispatch({ type: 'SET_TOUCHED', payload: touched });\n      return validateOnBlur\n        ? validateFormWithLowPriority(state.values)\n        : Promise.resolve();\n    },\n    [validateFormWithLowPriority, state.values, validateOnBlur]\n  );\n\n  const setErrors = React.useCallback((errors: FormikErrors<Values>) => {\n    dispatch({ type: 'SET_ERRORS', payload: errors });\n  }, []);\n\n  const setValues = useEventCallback(\n    (values: Values) => {\n      dispatch({ type: 'SET_VALUES', payload: values });\n      return validateOnChange\n        ? validateFormWithLowPriority(state.values)\n        : Promise.resolve();\n    },\n    [validateFormWithLowPriority, state.values, validateOnChange]\n  );\n\n  const setFieldError = React.useCallback(\n    (field: string, value: string | undefined) => {\n      dispatch({\n        type: 'SET_FIELD_ERROR',\n        payload: { field, value },\n      });\n    },\n    []\n  );\n\n  const setFieldValue = useEventCallback(\n    (field: string, value: any, shouldValidate: boolean = true) => {\n      dispatch({\n        type: 'SET_FIELD_VALUE',\n        payload: {\n          field,\n          value,\n        },\n      });\n      return validateOnChange && shouldValidate\n        ? validateFormWithLowPriority(setIn(state.values, field, value))\n        : Promise.resolve();\n    },\n    [validateFormWithLowPriority, state.values, validateOnChange]\n  );\n\n  const executeChange = React.useCallback(\n    (eventOrTextValue: string | React.ChangeEvent<any>, maybePath?: string) => {\n      // By default, assume that the first argument is a string. This allows us to use\n      // handleChange with React Native and React Native Web's onChangeText prop which\n      // provides just the value of the input.\n      let field = maybePath;\n      let val = eventOrTextValue;\n      let parsed;\n      // If the first argument is not a string though, it has to be a synthetic React Event (or a fake one),\n      // so we handle like we would a normal HTML change event.\n      if (!isString(eventOrTextValue)) {\n        // If we can, persist the event\n        // @see https://reactjs.org/docs/events.html#event-pooling\n        if ((eventOrTextValue as React.ChangeEvent<any>).persist) {\n          (eventOrTextValue as React.ChangeEvent<any>).persist();\n        }\n        const {\n          type,\n          name,\n          id,\n          value,\n          checked,\n          outerHTML,\n        } = (eventOrTextValue as React.ChangeEvent<any>).target;\n        field = maybePath ? maybePath : name ? name : id;\n        if (!field && process.env.NODE_ENV !== 'production') {\n          warnAboutMissingIdentifier({\n            htmlContent: outerHTML,\n            documentationAnchorLink: 'handlechange-e-reactchangeeventany--void',\n            handlerName: 'handleChange',\n          });\n        }\n        val = /number|range/.test(type)\n          ? ((parsed = parseFloat(value)), isNaN(parsed) ? '' : parsed)\n          : /checkbox/.test(type)\n          ? checked\n          : value;\n      }\n\n      if (field) {\n        // Set form fields by name\n        setFieldValue(field, val);\n      }\n    },\n    [setFieldValue]\n  );\n\n  const handleChange = React.useCallback(\n    (\n      eventOrPath: string | React.ChangeEvent<any>\n    ): void | ((eventOrTextValue: string | React.ChangeEvent<any>) => void) => {\n      if (isString(eventOrPath)) {\n        return event => executeChange(event, eventOrPath);\n      } else {\n        executeChange(eventOrPath);\n      }\n    },\n    [executeChange]\n  );\n\n  const setFieldTouched = useEventCallback(\n    (\n      field: string,\n      touched: boolean = true,\n      shouldValidate: boolean = true\n    ) => {\n      dispatch({\n        type: 'SET_FIELD_TOUCHED',\n        payload: {\n          field,\n          value: touched,\n        },\n      });\n      return validateOnBlur && shouldValidate\n        ? validateFormWithLowPriority(state.values)\n        : Promise.resolve();\n    },\n    [validateFormWithLowPriority, state.values, validateOnBlur]\n  );\n\n  const executeBlur = React.useCallback(\n    (e: any, path?: string) => {\n      if (e.persist) {\n        e.persist();\n      }\n      const { name, id, outerHTML } = e.target;\n      const field = path ? path : name ? name : id;\n\n      if (!field && process.env.NODE_ENV !== 'production') {\n        warnAboutMissingIdentifier({\n          htmlContent: outerHTML,\n          documentationAnchorLink: 'handleblur-e-any--void',\n          handlerName: 'handleBlur',\n        });\n      }\n\n      setFieldTouched(field, true);\n    },\n    [setFieldTouched]\n  );\n\n  const handleBlur = React.useCallback(\n    (eventOrString: any): void | ((e: any) => void) => {\n      if (isString(eventOrString)) {\n        return event => executeBlur(event, eventOrString);\n      } else {\n        executeBlur(eventOrString);\n      }\n    },\n    [executeBlur]\n  );\n\n  function setFormikState(\n    stateOrCb:\n      | FormikState<Values>\n      | ((state: FormikState<Values>) => FormikState<Values>)\n  ): void {\n    if (isFunction(stateOrCb)) {\n      dispatch({ type: 'SET_FORMIK_STATE', payload: stateOrCb(state) });\n    } else {\n      dispatch({ type: 'SET_FORMIK_STATE', payload: stateOrCb });\n    }\n  }\n\n  const setStatus = React.useCallback((status: any) => {\n    dispatch({ type: 'SET_STATUS', payload: status });\n  }, []);\n\n  const setSubmitting = React.useCallback((isSubmitting: boolean) => {\n    dispatch({ type: 'SET_ISSUBMITTING', payload: isSubmitting });\n  }, []);\n\n  const imperativeMethods = {\n    resetForm,\n\n    validateForm: validateFormWithHighPriority,\n    validateField,\n    setErrors,\n    setFieldError,\n    setFieldTouched,\n    setFieldValue,\n    setStatus,\n    setSubmitting,\n    setTouched,\n    setValues,\n    setFormikState,\n  };\n\n  const executeSubmit = useEventCallback(() => {\n    return onSubmit(state.values, imperativeMethods);\n  }, [imperativeMethods, onSubmit, state.values]);\n\n  const submitForm = useEventCallback(() => {\n    dispatch({ type: 'SUBMIT_ATTEMPT' });\n    return validateFormWithHighPriority().then(\n      (combinedErrors: FormikErrors<Values>) => {\n        const isActuallyValid = Object.keys(combinedErrors).length === 0;\n        if (isActuallyValid) {\n          return Promise.resolve(executeSubmit())\n            .then(() => {\n              if (!!isMounted.current) {\n                dispatch({ type: 'SUBMIT_SUCCESS' });\n              }\n            })\n            .catch(_errors => {\n              if (!!isMounted.current) {\n                dispatch({ type: 'SUBMIT_FAILURE' });\n              }\n            });\n        } else if (!!isMounted.current) {\n          // ^^^ Make sure Formik is still mounted before calling setState\n          dispatch({ type: 'SUBMIT_FAILURE' });\n          return;\n        }\n        return;\n      }\n    );\n  }, [executeSubmit, validateFormWithHighPriority]);\n\n  const handleSubmit = useEventCallback(\n    (e?: React.FormEvent<HTMLFormElement>) => {\n      if (e && e.preventDefault && isFunction(e.preventDefault)) {\n        e.preventDefault();\n      }\n\n      if (e && e.stopPropagation && isFunction(e.stopPropagation)) {\n        e.stopPropagation();\n      }\n\n      // Warn if form submission is triggered by a <button> without a\n      // specified `type` attribute during development. This mitigates\n      // a common gotcha in forms with both reset and submit buttons,\n      // where the dev forgets to add type=\"button\" to the reset button.\n      if (\n        process.env.NODE_ENV !== 'production' &&\n        typeof document !== 'undefined'\n      ) {\n        // Safely get the active element (works with IE)\n        const activeElement = getActiveElement();\n        if (\n          activeElement !== null &&\n          activeElement instanceof HTMLButtonElement\n        ) {\n          invariant(\n            activeElement.attributes &&\n              activeElement.attributes.getNamedItem('type'),\n            'You submitted a Formik form using a button with an unspecified `type` attribute.  Most browsers default button elements to `type=\"submit\"`. If this is not a submit button, please add `type=\"button\"`.'\n          );\n        }\n      }\n\n      submitForm();\n    },\n    [submitForm]\n  );\n  const handleReset = useEventCallback(() => {\n    if (props.onReset) {\n      const maybePromisedOnReset = (props.onReset as any)(\n        state.values,\n        imperativeMethods\n      );\n\n      if (isPromise(maybePromisedOnReset)) {\n        (maybePromisedOnReset as Promise<any>).then(resetForm);\n      } else {\n        resetForm();\n      }\n    } else {\n      resetForm();\n    }\n  }, [imperativeMethods, props.onReset, resetForm, state.values]);\n\n  const getFieldMeta = React.useCallback(\n    (name: string) => {\n      return {\n        value: getIn(state.values, name),\n        error: getIn(state.errors, name),\n        touched: !!getIn(state.touched, name),\n        initialValue: getIn(initialValues.current, name),\n        initialTouched: !!getIn(initialTouched.current, name),\n        initialError: getIn(initialErrors.current, name),\n      };\n    },\n    [state.errors, state.touched, state.values]\n  );\n\n  const getFieldProps = React.useCallback(\n    (\n      name: string,\n      type: string\n    ): [FieldInputProps<any>, FieldMetaProps<any>] => {\n      const field = {\n        name,\n        value:\n          type && (type === 'radio' || type === 'checkbox')\n            ? undefined // React uses checked={} for these inputs\n            : getIn(state.values, name),\n        onChange: handleChange,\n        onBlur: handleBlur,\n      };\n\n      return [field, getFieldMeta(name)];\n    },\n    [getFieldMeta, handleBlur, handleChange, state.values]\n  );\n\n  const dirty = React.useMemo(\n    () => !isEqual(initialValues.current, state.values),\n    [state.values]\n  );\n\n  const isValid = React.useMemo(\n    () =>\n      typeof isInitialValid !== 'undefined'\n        ? dirty\n          ? state.errors && Object.keys(state.errors).length === 0\n          : isInitialValid !== false && isFunction(isInitialValid)\n          ? (isInitialValid as (props: FormikConfig<Values>) => boolean)(props)\n          : (isInitialValid as boolean)\n        : state.errors && Object.keys(state.errors).length === 0,\n    [isInitialValid, dirty, state.errors, props]\n  );\n\n  const ctx = {\n    ...state,\n    initialValues: initialValues.current,\n    initialErrors: initialErrors.current,\n    initialTouched: initialTouched.current,\n    initialStatus: initialStatus.current,\n    handleBlur,\n    handleChange,\n    handleReset,\n    handleSubmit,\n    resetForm,\n    setErrors,\n    setFormikState,\n    setFieldTouched,\n    setFieldValue,\n    setFieldError,\n    setStatus,\n    setSubmitting,\n    setTouched,\n    setValues,\n    submitForm,\n    validateForm: validateFormWithHighPriority,\n    validateField,\n    isValid,\n    dirty,\n    unregisterField,\n    registerField,\n    getFieldProps,\n    validateOnBlur,\n    validateOnChange,\n  };\n\n  return ctx;\n}\n\nexport function Formik<Values = object, ExtraProps = {}>(\n  props: FormikConfig<Values> & ExtraProps\n) {\n  const formikbag = useFormikInternal<Values>(props);\n  const { component, children, render } = props;\n  return (\n    <FormikProvider value={formikbag}>\n      {component\n        ? React.createElement(component as any, formikbag)\n        : render\n        ? render(formikbag)\n        : children // children come last, always called\n        ? isFunction(children)\n          ? (children as ((bag: FormikProps<Values>) => React.ReactNode))(\n              formikbag as FormikProps<Values>\n            )\n          : !isEmptyChildren(children)\n          ? React.Children.only(children)\n          : null\n        : null}\n    </FormikProvider>\n  );\n}\n\nfunction warnAboutMissingIdentifier({\n  htmlContent,\n  documentationAnchorLink,\n  handlerName,\n}: {\n  htmlContent: string;\n  documentationAnchorLink: string;\n  handlerName: string;\n}) {\n  console.warn(\n    `Warning: Formik called \\`${handlerName}\\`, but you forgot to pass an \\`id\\` or \\`name\\` attribute to your input:\n    ${htmlContent}\n    Formik cannot determine which value to update. For more info see https://github.com/jaredpalmer/formik#${documentationAnchorLink}\n  `\n  );\n}\n\n/**\n * Transform Yup ValidationError to a more usable object\n */\nexport function yupToFormErrors<Values>(yupError: any): FormikErrors<Values> {\n  let errors: FormikErrors<Values> = {};\n  if (yupError.inner.length === 0) {\n    return setIn(errors, yupError.path, yupError.message);\n  }\n  for (let err of yupError.inner) {\n    if (!(errors as any)[err.path]) {\n      errors = setIn(errors, err.path, err.message);\n    }\n  }\n  return errors;\n}\n\n/**\n * Validate a yup schema.\n */\nexport function validateYupSchema<T extends FormikValues>(\n  values: T,\n  schema: any,\n  sync: boolean = false,\n  context: any = {}\n): Promise<Partial<T>> {\n  let validateData: Partial<T> = {};\n  for (let k in values) {\n    if (values.hasOwnProperty(k)) {\n      const key = String(k);\n      validateData[key] = values[key] !== '' ? values[key] : undefined;\n    }\n  }\n  return schema[sync ? 'validateSync' : 'validate'](validateData, {\n    abortEarly: false,\n    context: context,\n  });\n}\n\n/**\n * deepmerge array merging algorithm\n * https://github.com/KyleAMathews/deepmerge#combine-array\n */\nfunction arrayMerge(target: any[], source: any[], options: any): any[] {\n  const destination = target.slice();\n\n  source.forEach(function(e: any, i: number) {\n    if (typeof destination[i] === 'undefined') {\n      const cloneRequested = options.clone !== false;\n      const shouldClone = cloneRequested && options.isMergeableObject(e);\n      destination[i] = shouldClone\n        ? deepmerge(Array.isArray(e) ? [] : {}, e, options)\n        : e;\n    } else if (options.isMergeableObject(e)) {\n      destination[i] = deepmerge(target[i], e, options);\n    } else if (target.indexOf(e) === -1) {\n      destination.push(e);\n    }\n  });\n  return destination;\n}\n\nfunction useEventCallback<T extends (...args: any[]) => any>(\n  fn: T,\n  dependencies: React.DependencyList\n): T {\n  const ref: any = React.useRef(() => {\n    throw new Error('Cannot call an event handler while rendering.');\n  });\n\n  React.useEffect(() => {\n    ref.current = fn;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fn, ...dependencies]);\n\n  return React.useCallback<any>(\n    (...argz: any[]) => {\n      const fn = ref.current;\n      return fn(...argz);\n    },\n    [ref]\n  ) as T;\n}\n","import * as React from 'react';\nimport {\n  FormikProps,\n  GenericFieldHTMLAttributes,\n  FieldMetaProps,\n  FieldInputProps,\n} from './types';\nimport { useFormikContext } from './FormikContext';\nimport { isFunction, isEmptyChildren } from './utils';\nimport invariant from 'tiny-warning';\n\nexport interface FieldProps<V = any> {\n  field: FieldInputProps<V>;\n  form: FormikProps<V>; // if ppl want to restrict this for a given form, let them.\n  meta: FieldMetaProps<V>;\n}\n\nexport interface FieldConfig {\n  /**\n   * Field component to render. Can either be a string like 'select' or a component.\n   * @deprecated\n   */\n  component?:\n    | string\n    | React.ComponentType<FieldProps<any>>\n    | React.ComponentType;\n\n  /**\n   * Component to render. Can either be a string e.g. 'select', 'input', or 'textarea', or a component.\n   */\n  as?:\n    | React.ComponentType<FieldProps<any>['field']>\n    | keyof JSX.IntrinsicElements\n    | React.ComponentType;\n\n  /**\n   * Render prop (works like React router's <Route render={props =>} />)\n   * @deprecated\n   */\n  render?: (props: FieldProps<any>) => React.ReactNode;\n\n  /**\n   * Children render function <Field name>{props => ...}</Field>)\n   */\n  children?: ((props: FieldProps<any>) => React.ReactNode) | React.ReactNode;\n\n  /**\n   * Validate a single field value independently\n   */\n  validate?: (value: any) => string | Promise<void> | undefined;\n\n  /**\n   * Field name\n   */\n  name: string;\n\n  /** HTML input type */\n  type?: string;\n\n  /** Field value */\n  value?: any;\n\n  /** Inner ref */\n  innerRef?: (instance: any) => void;\n}\n\nexport type FieldAttributes<T> = GenericFieldHTMLAttributes & FieldConfig & T;\n\nexport function useField<Val = any>(name: string, type?: string) {\n  const formik = useFormikContext();\n  if (process.env.NODE_ENV !== 'production') {\n    invariant(\n      formik,\n      'useField() / <Field /> must be used underneath a <Formik> component or withFormik() higher order component'\n    );\n  }\n  return formik.getFieldProps<Val>(name, type);\n}\n\nexport function Field({\n  validate,\n  name,\n  render,\n  children,\n  as: is, // `as` is reserved in typescript lol\n  component,\n  ...props\n}: FieldAttributes<any>) {\n  const {\n    validate: _validate,\n    validationSchema: _validationSchema,\n    ...formik\n  } = useFormikContext();\n\n  React.useEffect(() => {\n    if (process.env.NODE_ENV !== 'production') {\n      invariant(\n        !render,\n        `<Field render> has been deprecated and will be removed in future versions of Formik. Please use a child callback function instead. To get rid of this warning, replace <Field name=\"${name}\" render={({field, form}) => ...} /> with <Field name=\"${name}\">{({field, form, meta}) => ...}</Field>`\n      );\n\n      invariant(\n        !component,\n        '<Field component> has been deprecated and will be removed in future versions of Formik. Use <Field as> instead. Note that with the `as` prop, all props are passed directly through and not grouped in `field` object key.'\n      );\n\n      invariant(\n        !(is && children && isFunction(children)),\n        'You should not use <Field as> and <Field children> as a function in the same <Field> component; <Field as> will be ignored.'\n      );\n\n      invariant(\n        !(component && children && isFunction(children)),\n        'You should not use <Field component> and <Field children> as a function in the same <Field> component; <Field component> will be ignored.'\n      );\n\n      invariant(\n        !(render && children && !isEmptyChildren(children)),\n        'You should not use <Field render> and <Field children> in the same <Field> component; <Field children> will be ignored'\n      );\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  React.useEffect(() => {\n    formik.registerField(name, {\n      validate: validate,\n    });\n    return () => {\n      formik.unregisterField(name);\n    };\n  }, [formik, name, validate]);\n  const [field, meta] = formik.getFieldProps(name, props.type);\n  const legacyBag = { field, form: formik };\n\n  if (render) {\n    return render(legacyBag);\n  }\n\n  if (isFunction(children)) {\n    return children({ ...legacyBag, meta });\n  }\n\n  if (component) {\n    // This behavior is backwards compat with earlier Formik 0.9 to 1.x\n    if (typeof component === 'string') {\n      const { innerRef, ...rest } = props;\n      return React.createElement(\n        component,\n        { ref: innerRef, ...field, ...rest },\n        children\n      );\n    }\n    // We don't pass `meta` for backwards compat\n    return React.createElement(\n      component,\n      { field, form: formik, ...props },\n      children\n    );\n  }\n\n  // default to input here so we can check for both `as` and `children` above\n  const asElement = is || 'input';\n\n  if (typeof asElement === 'string') {\n    const { innerRef, ...rest } = props;\n    return React.createElement(\n      asElement,\n      { ref: innerRef, ...field, ...rest },\n      children\n    );\n  }\n\n  return React.createElement(asElement, { ...field, ...props }, children);\n}\nexport const FastField = Field;\n","import * as React from 'react';\nimport { useFormikContext } from './FormikContext';\n\nexport type FormikFormProps = Pick<\n  React.FormHTMLAttributes<HTMLFormElement>,\n  Exclude<\n    keyof React.FormHTMLAttributes<HTMLFormElement>,\n    'onReset' | 'onSubmit'\n  >\n>;\n\nexport function Form(props: FormikFormProps) {\n  const { handleReset, handleSubmit } = useFormikContext();\n  return <form onSubmit={handleSubmit} onReset={handleReset} {...props} />;\n}\n\nForm.displayName = 'Form';\n","import hoistNonReactStatics from 'hoist-non-react-statics';\nimport * as React from 'react';\nimport { Formik } from './Formik';\nimport {\n  FormikHelpers,\n  FormikProps,\n  FormikSharedConfig,\n  FormikValues,\n  FormikTouched,\n  FormikErrors,\n} from './types';\nimport { isFunction } from './utils';\n\n/**\n * State, handlers, and helpers injected as props into the wrapped form component.\n * Used with withFormik()\n *\n * @deprecated  Use `OuterProps & FormikProps<Values>` instead.\n */\nexport type InjectedFormikProps<Props, Values> = Props & FormikProps<Values>;\n\n/**\n * Formik actions + { props }\n */\nexport type FormikBag<P, V> = { props: P } & FormikHelpers<V>;\n\n/**\n * withFormik() configuration options. Backwards compatible.\n */\nexport interface WithFormikConfig<\n  Props,\n  Values extends FormikValues = FormikValues,\n  DeprecatedPayload = Values\n> extends FormikSharedConfig<Props> {\n  /**\n   * Set the display name of the component. Useful for React DevTools.\n   */\n  displayName?: string;\n\n  /**\n   * Submission handler\n   */\n  handleSubmit: (values: Values, formikBag: FormikBag<Props, Values>) => void;\n\n  /**\n   * Map props to the form values\n   */\n  mapPropsToValues?: (props: Props) => Values;\n\n  /**\n   * Map props to the form values\n   */\n  mapPropsToStatus?: (props: Props) => any;\n\n  /**\n   * Map props to the form touched state\n   */\n  mapPropsToTouched?: (props: Props) => FormikTouched<Values>;\n\n  /**\n   * Map props to the form touched state\n   */\n  mapPropsToErrors?: (props: Props) => FormikErrors<Values>;\n\n  /**\n   * @deprecated in 0.9.0 (but needed to break TS types)\n   */\n  mapValuesToPayload?: (values: Values) => DeprecatedPayload;\n\n  /**\n   * A Yup Schema or a function that returns a Yup schema\n   */\n  validationSchema?: any | ((props: Props) => any);\n\n  /**\n   * Validation function. Must return an error object or promise that\n   * throws an error object where that object keys map to corresponding value.\n   */\n  validate?: (values: Values, props: Props) => void | object | Promise<any>;\n}\n\nexport type CompositeComponent<P> =\n  | React.ComponentClass<P>\n  | React.StatelessComponent<P>;\n\nexport interface ComponentDecorator<TOwnProps, TMergedProps> {\n  (component: CompositeComponent<TMergedProps>): React.ComponentType<TOwnProps>;\n}\n\nexport interface InferableComponentDecorator<TOwnProps> {\n  <T extends CompositeComponent<TOwnProps>>(component: T): T;\n}\n\n/**\n * A public higher-order component to access the imperative API\n */\nexport function withFormik<\n  OuterProps,\n  Values extends FormikValues,\n  Payload = Values\n>({\n  mapPropsToValues = (vanillaProps: OuterProps): Values => {\n    let val: Values = {} as Values;\n    for (let k in vanillaProps) {\n      if (\n        vanillaProps.hasOwnProperty(k) &&\n        typeof vanillaProps[k] !== 'function'\n      ) {\n        // @todo TypeScript fix\n        (val as any)[k] = vanillaProps[k];\n      }\n    }\n    return val as Values;\n  },\n  ...config\n}: WithFormikConfig<OuterProps, Values, Payload>): ComponentDecorator<\n  OuterProps,\n  OuterProps & FormikProps<Values>\n> {\n  return function createFormik(\n    Component: CompositeComponent<OuterProps & FormikProps<Values>>\n  ): React.ComponentClass<OuterProps> {\n    const componentDisplayName =\n      Component.displayName ||\n      Component.name ||\n      (Component.constructor && Component.constructor.name) ||\n      'Component';\n    /**\n     * We need to use closures here for to provide the wrapped component's props to\n     * the respective withFormik config methods.\n     */\n    class C extends React.Component<OuterProps, {}> {\n      static displayName = `WithFormik(${componentDisplayName})`;\n\n      validate = (values: Values): void | object | Promise<any> => {\n        return config.validate!(values, this.props);\n      };\n\n      validationSchema = () => {\n        return isFunction(config.validationSchema)\n          ? config.validationSchema!(this.props)\n          : config.validationSchema;\n      };\n\n      handleSubmit = (values: Values, actions: FormikHelpers<Values>) => {\n        return config.handleSubmit(values, {\n          ...actions,\n          props: this.props,\n        });\n      };\n\n      /**\n       * Just avoiding a render callback for perf here\n       */\n      renderFormComponent = (formikProps: FormikProps<Values>) => {\n        return <Component {...this.props} {...formikProps} />;\n      };\n\n      render() {\n        const { children, ...props } = this.props as any;\n        return (\n          <Formik\n            {...props}\n            {...config}\n            validate={config.validate && this.validate}\n            validationSchema={config.validationSchema && this.validationSchema}\n            initialValues={mapPropsToValues(this.props)}\n            initialStatus={\n              config.mapPropsToStatus && config.mapPropsToStatus(this.props)\n            }\n            initialErrors={\n              config.mapPropsToErrors && config.mapPropsToErrors(this.props)\n            }\n            initialTouched={\n              config.mapPropsToTouched && config.mapPropsToTouched(this.props)\n            }\n            onSubmit={this.handleSubmit as any}\n            render={this.renderFormComponent}\n          />\n        );\n      }\n    }\n\n    return hoistNonReactStatics(\n      C,\n      Component as React.ComponentClass<OuterProps & FormikProps<Values>> // cast type to ComponentClass (even if SFC)\n    ) as React.ComponentClass<OuterProps>;\n  };\n}\n","import * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n\nimport { FormikContext } from './types';\nimport { FormikConsumer } from './FormikContext';\n\n/**\n * Connect any component to Formik context, and inject as a prop called `formik`;\n * @param Comp React Component\n */\nexport function connect<OuterProps, Values = {}>(\n  Comp: React.ComponentType<OuterProps & { formik: FormikContext<Values> }>\n) {\n  const C: React.SFC<OuterProps> = (props: OuterProps) => (\n    <FormikConsumer>\n      {formik => <Comp {...props} formik={formik} />}\n    </FormikConsumer>\n  );\n  const componentDisplayName =\n    Comp.displayName ||\n    Comp.name ||\n    (Comp.constructor && Comp.constructor.name) ||\n    'Component';\n\n  // Assign Comp to C.WrappedComponent so we can access the inner component in tests\n  // For example, <Field.WrappedComponent /> gets us <FieldInner/>\n  (C as React.SFC<OuterProps> & {\n    WrappedComponent: React.ReactNode;\n  }).WrappedComponent = Comp;\n\n  C.displayName = `FormikConnect(${componentDisplayName})`;\n\n  return hoistNonReactStatics(\n    C,\n    Comp as React.ComponentClass<OuterProps & { formik: FormikContext<Values> }> // cast type to ComponentClass (even if SFC)\n  ) as React.ComponentType<OuterProps>;\n}\n","import * as React from 'react';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { connect } from './connect';\nimport {\n  FormikContext,\n  FormikState,\n  SharedRenderProps,\n  FormikProps,\n} from './types';\nimport { getIn, isEmptyChildren, isFunction, setIn } from './utils';\n\nexport type FieldArrayRenderProps = ArrayHelpers & {\n  form: FormikProps<any>;\n  name: string;\n};\n\nexport type FieldArrayConfig = {\n  /** Really the path to the array field to be updated */\n  name: string;\n  /** Should field array validate the form AFTER array updates/changes? */\n  validateOnChange?: boolean;\n} & SharedRenderProps<FieldArrayRenderProps>;\nexport interface ArrayHelpers {\n  /** Imperatively add a value to the end of an array */\n  push: (obj: any) => void;\n  /** Curried fn to add a value to the end of an array */\n  handlePush: (obj: any) => () => void;\n  /** Imperatively swap two values in an array */\n  swap: (indexA: number, indexB: number) => void;\n  /** Curried fn to swap two values in an array */\n  handleSwap: (indexA: number, indexB: number) => () => void;\n  /** Imperatively move an element in an array to another index */\n  move: (from: number, to: number) => void;\n  /** Imperatively move an element in an array to another index */\n  handleMove: (from: number, to: number) => () => void;\n  /** Imperatively insert an element at a given index into the array */\n  insert: (index: number, value: any) => void;\n  /** Curried fn to insert an element at a given index into the array */\n  handleInsert: (index: number, value: any) => () => void;\n  /** Imperatively replace a value at an index of an array  */\n  replace: (index: number, value: any) => void;\n  /** Curried fn to replace an element at a given index into the array */\n  handleReplace: (index: number, value: any) => () => void;\n  /** Imperatively add an element to the beginning of an array and return its length */\n  unshift: (value: any) => number;\n  /** Curried fn to add an element to the beginning of an array */\n  handleUnshift: (value: any) => () => void;\n  /** Curried fn to remove an element at an index of an array */\n  handleRemove: (index: number) => () => void;\n  /** Curried fn to remove a value from the end of the array */\n  handlePop: () => () => void;\n  /** Imperatively remove and element at an index of an array */\n  remove<T>(index: number): T | undefined;\n  /** Imperatively remove and return value from the end of the array */\n  pop<T>(): T | undefined;\n}\n\n/**\n * Some array helpers!\n */\nexport const move = (array: any[], from: number, to: number) => {\n  const copy = [...(array || [])];\n  const value = copy[from];\n  copy.splice(from, 1);\n  copy.splice(to, 0, value);\n  return copy;\n};\n\nexport const swap = (array: any[], indexA: number, indexB: number) => {\n  const copy = [...(array || [])];\n  const a = copy[indexA];\n  copy[indexA] = copy[indexB];\n  copy[indexB] = a;\n  return copy;\n};\n\nexport const insert = (array: any[], index: number, value: any) => {\n  const copy = [...(array || [])];\n  copy.splice(index, 0, value);\n  return copy;\n};\n\nexport const replace = (array: any[], index: number, value: any) => {\n  const copy = [...(array || [])];\n  copy[index] = value;\n  return copy;\n};\nclass FieldArrayInner<Values = {}> extends React.Component<\n  FieldArrayConfig & { formik: FormikContext<Values> },\n  {}\n> {\n  static defaultProps = {\n    validateOnChange: true,\n  };\n\n  constructor(props: FieldArrayConfig & { formik: FormikContext<Values> }) {\n    super(props);\n    // We need TypeScript generics on these, so we'll bind them in the constructor\n    // @todo Fix TS 3.2.1\n    this.remove = this.remove.bind(this) as any;\n    this.pop = this.pop.bind(this) as any;\n  }\n\n  updateArrayField = (\n    fn: Function,\n    alterTouched: boolean | Function,\n    alterErrors: boolean | Function\n  ) => {\n    const {\n      name,\n      validateOnChange,\n      formik: { setFormikState, validateForm },\n    } = this.props;\n    setFormikState(\n      (prevState: FormikState<any>) => {\n        let updateErrors = typeof alterErrors === 'function' ? alterErrors : fn;\n        let updateTouched =\n          typeof alterTouched === 'function' ? alterTouched : fn;\n\n        return {\n          ...prevState,\n          values: setIn(\n            prevState.values,\n            name,\n            fn(getIn(prevState.values, name))\n          ),\n          errors: alterErrors\n            ? setIn(\n                prevState.errors,\n                name,\n                updateErrors(getIn(prevState.errors, name))\n              )\n            : prevState.errors,\n          touched: alterTouched\n            ? setIn(\n                prevState.touched,\n                name,\n                updateTouched(getIn(prevState.touched, name))\n              )\n            : prevState.touched,\n        };\n      },\n      () => {\n        if (validateOnChange) {\n          validateForm();\n        }\n      }\n    );\n  };\n\n  push = (value: any) =>\n    this.updateArrayField(\n      (array: any[]) => [...(array || []), cloneDeep(value)],\n      false,\n      false\n    );\n\n  handlePush = (value: any) => () => this.push(value);\n\n  swap = (indexA: number, indexB: number) =>\n    this.updateArrayField(\n      (array: any[]) => swap(array, indexA, indexB),\n      true,\n      true\n    );\n\n  handleSwap = (indexA: number, indexB: number) => () =>\n    this.swap(indexA, indexB);\n\n  move = (from: number, to: number) =>\n    this.updateArrayField((array: any[]) => move(array, from, to), true, true);\n\n  handleMove = (from: number, to: number) => () => this.move(from, to);\n\n  insert = (index: number, value: any) =>\n    this.updateArrayField(\n      (array: any[]) => insert(array, index, value),\n      (array: any[]) => insert(array, index, null),\n      (array: any[]) => insert(array, index, null)\n    );\n\n  handleInsert = (index: number, value: any) => () => this.insert(index, value);\n\n  replace = (index: number, value: any) =>\n    this.updateArrayField(\n      (array: any[]) => replace(array, index, value),\n      false,\n      false\n    );\n\n  handleReplace = (index: number, value: any) => () =>\n    this.replace(index, value);\n\n  unshift = (value: any) => {\n    let length = -1;\n    this.updateArrayField(\n      (array: any[]) => {\n        const arr = array ? [value, ...array] : [value];\n        if (length < 0) {\n          length = arr.length;\n        }\n        return arr;\n      },\n      (array: any[]) => {\n        const arr = array ? [null, ...array] : [null];\n        if (length < 0) {\n          length = arr.length;\n        }\n        return arr;\n      },\n      (array: any[]) => {\n        const arr = array ? [null, ...array] : [null];\n        if (length < 0) {\n          length = arr.length;\n        }\n        return arr;\n      }\n    );\n    return length;\n  };\n\n  handleUnshift = (value: any) => () => this.unshift(value);\n\n  remove<T>(index: number): T {\n    // We need to make sure we also remove relevant pieces of `touched` and `errors`\n    let result: any;\n    this.updateArrayField(\n      // so this gets call 3 times\n      (array?: any[]) => {\n        const copy = array ? [...array] : [];\n        if (!result) {\n          result = copy[index];\n        }\n        if (isFunction(copy.splice)) {\n          copy.splice(index, 1);\n        }\n        return copy;\n      },\n      true,\n      true\n    );\n\n    return result as T;\n  }\n\n  handleRemove = (index: number) => () => this.remove<any>(index);\n\n  pop<T>(): T {\n    // Remove relevant pieces of `touched` and `errors` too!\n    let result: any;\n    this.updateArrayField(\n      // so this gets call 3 times\n      (array: any[]) => {\n        const tmp = array;\n        if (!result) {\n          result = tmp && tmp.pop && tmp.pop();\n        }\n        return tmp;\n      },\n      true,\n      true\n    );\n\n    return result as T;\n  }\n\n  handlePop = () => () => this.pop<any>();\n\n  render() {\n    const arrayHelpers: ArrayHelpers = {\n      push: this.push,\n      pop: this.pop,\n      swap: this.swap,\n      move: this.move,\n      insert: this.insert,\n      replace: this.replace,\n      unshift: this.unshift,\n      remove: this.remove,\n      handlePush: this.handlePush,\n      handlePop: this.handlePop,\n      handleSwap: this.handleSwap,\n      handleMove: this.handleMove,\n      handleInsert: this.handleInsert,\n      handleReplace: this.handleReplace,\n      handleUnshift: this.handleUnshift,\n      handleRemove: this.handleRemove,\n    };\n\n    const {\n      component,\n      render,\n      children,\n      name,\n      formik: {\n        validate: _validate,\n        validationSchema: _validationSchema,\n        ...restOfFormik\n      },\n    } = this.props;\n\n    const props: FieldArrayRenderProps = {\n      ...arrayHelpers,\n      form: restOfFormik,\n      name,\n    };\n\n    return component\n      ? React.createElement(component as any, props)\n      : render\n        ? (render as any)(props)\n        : children // children come last, always called\n          ? typeof children === 'function'\n            ? (children as any)(props)\n            : !isEmptyChildren(children) ? React.Children.only(children) : null\n          : null;\n  }\n}\n\nexport const FieldArray = connect<FieldArrayConfig, any>(FieldArrayInner);\n","import * as React from 'react';\nimport { FormikContext } from './types';\nimport { getIn, isFunction } from './utils';\nimport { connect } from './connect';\n\nexport interface ErrorMessageProps {\n  name: string;\n  className?: string;\n  component?: string | React.ComponentType;\n  children?: ((errorMessage: string) => React.ReactNode);\n  render?: ((errorMessage: string) => React.ReactNode);\n}\n\nclass ErrorMessageImpl extends React.Component<\n  ErrorMessageProps & { formik: FormikContext<any> }\n> {\n  shouldComponentUpdate(\n    props: ErrorMessageProps & { formik: FormikContext<any> }\n  ) {\n    if (\n      getIn(this.props.formik.errors, this.props.name) !==\n        getIn(props.formik.errors, this.props.name) ||\n      getIn(this.props.formik.touched, this.props.name) !==\n        getIn(props.formik.touched, this.props.name) ||\n      Object.keys(this.props).length !== Object.keys(props).length\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    let { component, formik, render, children, name, ...rest } = this.props;\n\n    const touch = getIn(formik.touched, name);\n    const error = getIn(formik.errors, name);\n\n    return !!touch && !!error\n      ? render\n        ? isFunction(render) ? render(error) : null\n        : children\n          ? isFunction(children) ? children(error) : null\n          : component\n            ? React.createElement(component, rest as any, error)\n            : error\n      : null;\n  }\n}\n\nexport const ErrorMessage = connect<\n  ErrorMessageProps,\n  ErrorMessageProps & { formik: FormikContext<any> }\n>(ErrorMessageImpl);\n"],"names":["isFunction","obj","isObject","isInteger","String","Math","floor","Number","isString","Object","prototype","toString","call","isNaN","isEmptyChildren","children","React","count","isPromise","value","then","isInputEvent","target","getActiveElement","doc","document","undefined","activeElement","body","e","getIn","key","def","p","path","toPath","length","setIn","res","clone","resVal","i","pathArray","currentPath","currentObj","slice","nextPath","setNestedObjectValues","object","visited","response","WeakMap","keys","k","val","get","set","Array","isArray","PrivateFormikContext","FormikProvider","Provider","FormikConsumer","Consumer","useFormikContext","formikReducer","state","msg","type","values","payload","touched","errors","status","isSubmitting","isValidating","field","submitCount","emptyErrors","emptyTouched","emptyFieldRegistry","useFormikInternal","validateOnChange","validateOnBlur","isInitialValid","enableReinitialize","onSubmit","rest","props","initialValues","initialErrors","initialTouched","initialStatus","isMounted","fieldRegistry","invariant","current","dispatch","runValidateHandler","Promise","resolve","maybePromisedErrors","validate","runValidationSchema","validationSchema","schema","promise","validateAt","validateYupSchema","err","yupToFormErrors","runSingleFieldLevelValidation","runFieldLevelValidations","fieldKeysWithValidation","filter","f","fieldValidations","map","all","fieldErrorsList","reduce","prev","curr","index","runAllValidations","fieldErrors","schemaErrors","validateErrors","combinedErrors","deepmerge","arrayMerge","validateFormWithLowPriority","useEventCallback","unstable_runWithPriority","LowPriority","validateFormWithHighPriority","isEqual","resetForm","nextState","validateField","name","maybePromise","x","error","registerField","unregisterField","setTouched","setErrors","setValues","setFieldError","setFieldValue","shouldValidate","executeChange","eventOrTextValue","maybePath","parsed","persist","id","checked","outerHTML","process","warnAboutMissingIdentifier","htmlContent","documentationAnchorLink","handlerName","test","parseFloat","handleChange","eventOrPath","event","setFieldTouched","executeBlur","handleBlur","eventOrString","setFormikState","stateOrCb","setStatus","setSubmitting","imperativeMethods","validateForm","executeSubmit","submitForm","isActuallyValid","_errors","handleSubmit","preventDefault","stopPropagation","HTMLButtonElement","attributes","getNamedItem","handleReset","onReset","maybePromisedOnReset","getFieldMeta","initialValue","initialError","getFieldProps","onChange","onBlur","dirty","isValid","ctx","Formik","formikbag","component","render","only","console","warn","yupError","inner","message","sync","context","validateData","hasOwnProperty","abortEarly","source","options","destination","forEach","cloneRequested","shouldClone","isMergeableObject","indexOf","push","fn","dependencies","ref","Error","useField","formik","Field","is","as","_validate","_validationSchema","meta","legacyBag","form","innerRef","asElement","FastField","Form","displayName","withFormik","mapPropsToValues","vanillaProps","config","createFormik","Component","componentDisplayName","constructor","C","actions","formikProps","mapPropsToStatus","mapPropsToErrors","mapPropsToTouched","renderFormComponent","hoistNonReactStatics","connect","Comp","WrappedComponent","move","array","from","to","copy","splice","swap","indexA","indexB","a","insert","replace","FieldArrayInner","alterTouched","alterErrors","prevState","updateErrors","updateTouched","updateArrayField","cloneDeep","arr","unshift","remove","pop","bind","result","tmp","arrayHelpers","handlePush","handlePop","handleSwap","handleMove","handleInsert","handleReplace","handleUnshift","handleRemove","restOfFormik","FieldArray","ErrorMessageImpl","shouldComponentUpdate","touch","ErrorMessage"],"mappings":"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"}